version: 2
jobs:
  build:
    docker:
      - image: circleci/node:11.10
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: run build
          command: |
            yarn && yarn build
  docker:
    machine: true
    steps:
      - checkout
      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose build --no-cache
            docker-compose up -d
            sleep 80
            docker-compose logs
            curl -L http://localhost:3000/

  deploy-dev:
    docker:
      - image: circleci/python:3.6.3
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "53:f6:f2:c2:3d:82:3d:b6:3c:51:13:af:e6:6f:57:35"
      - run:
          command: |
            sudo pip install fabric
            fab -H ${DEPLOY_USER}@${DEPLOY_HOST} -p -e deploy-dev --sha1 $CIRCLE_SHA1
            sleep 80
            curl -Lf ${URL_ROOT}/
      
  deploy-prod:
    docker:
      - image: circleci/python:3.6.3
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "53:f6:f2:c2:3d:82:3d:b6:3c:51:13:af:e6:6f:57:35"
      - run:
          command: |
            sudo pip install fabric
            fab -H ${DEPLOY_USER}@${DEPLOY_HOST} -p -e deploy-master --sha1 $CIRCLE_SHA1
            sleep 80
            curl -Lf ${URL_ROOT}/

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - docker
      - deploy-dev:
          context: DEVELOP
          requires:
            - build
            - docker
          filters:
            branches:
              only: develop
      - deploy-prod:
          context: PROD
          requires:
            - build
            - docker
          filters:
            branches:
              only: master
